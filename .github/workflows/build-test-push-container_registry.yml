
name: Build, Test, Push, and Deploy to AKS

on:
  push:
    branches: [ main ]

env:
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER || 'your_acr_name.azurecr.io' }}
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP || 'finmon-rg' }}
  AKS_CLUSTER_NAME: ${{ vars.AKS_CLUSTER_NAME || 'finmon-aks' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get_sha.outputs.sha }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get short commit SHA
      id: get_sha
      run: echo "sha=$(echo ${GITHUB_SHA::7})" >> $GITHUB_OUTPUT

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Run dotnet test
      run: dotnet test

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Login to ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Build and Push API Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/FinancialMonitoring.Api/Dockerfile
        push: true
        tags: ${{ env.ACR_LOGIN_SERVER }}/financialmonitoring-api:${{ steps.get_sha.outputs.sha }}

    - name: Build and Push Processor Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/TransactionProcessor/Dockerfile
        push: true
        tags: ${{ env.ACR_LOGIN_SERVER }}/transactionprocessor:${{ steps.get_sha.outputs.sha }}

    - name: Build and Push Simulator Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/TransactionSimulator/Dockerfile
        push: true
        tags: ${{ env.ACR_LOGIN_SERVER }}/transactionsimulator:${{ steps.get_sha.outputs.sha }}

    - name: Build and Push WebApp Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/FinancialMonitoring.WebApp/Dockerfile
        push: true
        tags: ${{ env.ACR_LOGIN_SERVER }}/financialmonitoring-webapp:${{ steps.get_sha.outputs.sha }}

    - name: Azure Logout
      run: az logout
      if: always()

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Set kubectl context to AKS cluster
      run: az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --overwrite-existing

    - name: Set Kustomize image tags
      working-directory: ./k8s-manifest
      run: |
        kustomize edit set image ${{ env.ACR_LOGIN_SERVER }}/financialmonitoring-api=:${{ needs.build-and-push.outputs.image_tag }}
        kustomize edit set image ${{ env.ACR_LOGIN_SERVER }}/transactionprocessor=:${{ needs.build-and-push.outputs.image_tag }}
        kustomize edit set image ${{ env.ACR_LOGIN_SERVER }}/transactionsimulator=:${{ needs.build-and-push.outputs.image_tag }}

    - name: Deploy to AKS
      working-directory: ./k8s-manifest
      run: kubectl apply -k .

    - name: Azure Logout
      run: az logout
      if: always()
