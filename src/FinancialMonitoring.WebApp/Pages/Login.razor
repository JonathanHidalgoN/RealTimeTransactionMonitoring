@page "/login"
@using FinancialMonitoring.WebApp.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudPaper Elevation="4" Class="pa-8">
        <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-8">
            Financial Monitoring System
        </MudText>

        <MudForm @ref="form" @bind-IsValid="@success">
            <MudTextField @bind-Value="username"
                          Label="Username"
                          Required="true"
                          RequiredError="Username is required"
                          Variant="Variant.Outlined"
                          Class="mb-4"
                          Immediate="true" />

            <MudTextField @bind-Value="password"
                          Label="Password"
                          InputType="InputType.Password"
                          Required="true"
                          RequiredError="Password is required"
                          Variant="Variant.Outlined"
                          Class="mb-6"
                          Immediate="true" />

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <MudAlert Severity="Severity.Error" Class="mb-4">
                    @errorMessage
                </MudAlert>
            }

            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       FullWidth="true"
                       Size="Size.Large"
                       OnClick="HandleLogin"
                       Disabled="isLoading">
                @if (isLoading)
                {
                    <MudProgressCircular Class="mr-2" Size="Size.Small" Indeterminate="true" />
                    <span>Logging in...</span>
                }
                else
                {
                    <span>Login</span>
                }
            </MudButton>
        </MudForm>

        <MudText Typo="Typo.caption" Align="Align.Center" Class="mt-8" Color="Color.Secondary">
            Demo Credentials: admin / password123
        </MudText>
    </MudPaper>
</MudContainer>

@code {
    private MudForm form;
    private string username = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;
    private bool success;
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        // If already authenticated, redirect to home
        var isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        // Validate form
        await form.Validate();
        if (!success)
        {
            return;
        }

        isLoading = true;
        StateHasChanged();

        try
        {
            var (loginSuccess, errorMsg) = await AuthService.LoginAsync(username, password);

            if (loginSuccess)
            {
                // Redirect to home page
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                errorMessage = errorMsg ?? "Login failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An unexpected error occurred. Please try again.";
            Console.WriteLine($"Login exception: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}
