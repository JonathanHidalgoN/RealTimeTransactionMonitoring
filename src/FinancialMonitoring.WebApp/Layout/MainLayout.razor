@* src/FinancialMonitoring.WebApp/Components/Layout/MainLayout.razor *@
@using FinancialMonitoring.WebApp.Services
@inherits LayoutComponentBase
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5">Financial Monitoring</MudText>
        <MudSpacer />
        @if (isAuthenticated)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Logout"
                          Color="Color.Inherit"
                          Edge="Edge.End"
                          OnClick="HandleLogout"
                          Title="Logout" />
        }
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Navigation</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pa-4 pt-16">
         @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}
